name: CI and Lighthouse CI for React App

# 이벤트 트리거 설정: main 브랜치에 푸시되거나 PR이 열릴 때 실행
on:
  push:
    branches:
      - main  # main 브랜치에 푸시될 때 실행
  pull_request:
    branches:
      - main  # main 브랜치로 PR이 열릴 때 실행

jobs:
  build-and-test:
    runs-on: ubuntu-latest  # 빌드를 수행할 환경 (Ubuntu 최신 버전)

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2  # GitHub 저장소의 코드를 체크아웃

      - name: Set up Node.js
        uses: actions/setup-node@v2  # Node.js 환경 설정
        with:
          node-version: '16'  # Node.js 버전 설정 (필요에 따라 변경 가능)

      - name: Install dependencies
        run: npm install  # 의존성 설치

      - name: Run tests
        run: npm test  # 테스트 실행 (Jest 등)

      - name: Build the project
        run: npm run build  # 빌드 실행 (React 앱의 빌드)

  lighthouse-ci:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Set up Node.js environment
        uses: actions/setup-node@v2
        
      - name: Install dependencies and Lighthouse CI CLI
        run: |
          npm install
          npm install --save-dev @lhci/cli@0.3.x
      
      - name: Run Lighthouse CI tests
        run: lhci autorun --upload.target=temporary-public-storage  # Lighthouse CI 실행 및 결과 업로드

      - name: Send Slack Notification on Success 
        env:
          SLACK_WEBHOOK_URL : ${{ secrets.SLACK_WEBHOOK_URL }}  # Webhook URL은 GitHub Secrets에 저장하세요.
        run : |
          curl -X POST --data-urlencode "payload={\"channel\": \"#배포알림\", \"username\": \"deploy-bot\", \"text\": \"배포가 성공적으로 완료되었습니다!\", \"icon_emoji\": \":rocket:\"}" $SLACK_WEBHOOK_URL
